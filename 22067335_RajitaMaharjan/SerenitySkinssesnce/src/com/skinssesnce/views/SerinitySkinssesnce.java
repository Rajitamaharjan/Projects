/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.skinssesnce.views;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import javax.swing.RowFilter;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author rajitamaharjan
 */
public class SerinitySkinssesnce extends javax.swing.JFrame {

    private DefaultTableModel model;
    private JComboBox<String> sort_jcomb;
    
  
    public SerinitySkinssesnce() {
        initComponents();
        addJButton = new JButton("Add");   
        customizeTableHeaderFont();
    }
    
    public enum SortingOrder {
        ASCENDING,
        DESCENDING
}

    
    private void customizeTableHeaderFont() {
        
        JTableHeader tableHeader = productsJTable.getTableHeader();
        Font customFont = new Font("Heiti TC", Font.BOLD, 13);
        tableHeader.setFont(customFont);
    }
   
    private void search(String searchString) {
        
      DefaultTableModel model = (DefaultTableModel) productsJTable.getModel();

       TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
       productsJTable.setRowSorter(sorter);
       
       int[] searchColumns = {1, 3};
       
       String searchText = searchString.toLowerCase();
       

       sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchString, searchColumns));
       
    }
            
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        serinityJPanel = new keeptoo.KGradientPanel();
        ScrollPane = new javax.swing.JScrollPane();
        productsJTable = new javax.swing.JTable();
        titleJlabel = new javax.swing.JLabel();
        clearAllfiltersJbutton = new javax.swing.JButton();
        addJButton = new javax.swing.JButton();
        updateJButton = new javax.swing.JButton();
        sortJComboBox = new javax.swing.JComboBox<>();
        skinTypeJComboBox = new javax.swing.JComboBox<>();
        productTypeJComboBox = new javax.swing.JComboBox<>();
        brandsJComboBox = new javax.swing.JComboBox<>();
        deleteJButton = new javax.swing.JButton();
        searchJLabel = new javax.swing.JLabel();
        numJLabel = new javax.swing.JLabel();
        productsJLabel = new javax.swing.JLabel();
        priceJLabel = new javax.swing.JLabel();
        brandsJLabel = new javax.swing.JLabel();
        productTypeJLabel = new javax.swing.JLabel();
        ingredientsJLabel = new javax.swing.JLabel();
        sizeJLabel = new javax.swing.JLabel();
        skintypeJLabel = new javax.swing.JLabel();
        packagingJLabel = new javax.swing.JLabel();
        ratingsJLabel = new javax.swing.JLabel();
        numJTextField = new javax.swing.JTextField();
        productJTextField = new javax.swing.JTextField();
        priceJTextField = new javax.swing.JTextField();
        brandsJTextField = new javax.swing.JTextField();
        ingredientsJTextField = new javax.swing.JTextField();
        sizeJTextField = new javax.swing.JTextField();
        skintypeJTextField = new javax.swing.JTextField();
        ratingsJTextField = new javax.swing.JTextField();
        packagingJTextField = new javax.swing.JTextField();
        productTypeJTextField = new javax.swing.JTextField();
        searchJTextField = new javax.swing.JTextField();
        clearAllJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMixingCutoutShape(null);

        serinityJPanel.setkEndColor(new java.awt.Color(153, 153, 255));
        serinityJPanel.setkGradientFocus(3000);
        serinityJPanel.setkStartColor(new java.awt.Color(248, 233, 224));

        productsJTable.setBackground(new java.awt.Color(248, 241, 244));
        productsJTable.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        productsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "EltaMD UV Pure SPF 46", "$37.00", "EltaMD", "Sunscreen ", "Zinc Oxide, Octinoxate", "1.7 oz", "Sensitive, Dry", "Pump", "4.1/5"},
                {"2", "La Roche-Posay Toleriane Fluid", "$29.99", "La Roche-Posay", "Moisturizer", "Glycerin, Niacinamide", "6.7 oz", "All, Sensitive, Dry", "Pump", "4.5/5"},
                {"3", "Rhode Peptide Glazing Fluid", "$29.00", "Rhode", "Lip Glaze", "Peptides, Squalane, Coconut Oil", "8ml / .27 fl oz", "All", "Tube", "4.4/5"},
                {"4", "Cetaphil Daily Facial Moisturizer", "$11.99", "Cetaphil", "Moisturizer", "Hyaluronic Acid, Niacinamide", "16 oz", "All, Dry, Sensitive", "Pump", "4.3/5"},
                {"5", "Vanicream Gentle Facial Cleanser", "$12.99", "Vanicream", "Cleanser", "Coconut Oil, Glycerin", "8 oz", "All, Sensitive, Dry", "Pump", "4.2/5"},
                {"6", "Biossanc Vitamin C Rose Oil", "$38.00", "Biossance", "Facial Oil", "Squalane, Vitamin C, Rose Oil", "1 oz", "All, Dry, Dull", "Dropper", "4.6/5"},
                {"7", "The Ordinary Hyaluronic Acid 2%", "$6.90", "The Ordinary", "Serum ", "Hyaluronic Acid, Vitamin B5", "1 oz", "All, Dry, Combination", "Dropper", "4.7/5"},
                {"8", "Paula's Choice 2% BHA Liquid Exfoliant", "$38.00", "Paula's Choice", "Exfoliant", "Salicylic Acid, Green Tea Extract", "2 oz", "Oily, Combination", "Dropper", "4.6/5"},
                {"9", "Farmacy 2% BHA Pore Cleaning Toner", "$34.00", "Farmacy", "Toner", "Salicylic Acid, Willow Bark Extract", "4 oz", "Oily, Combination", "Spray", "4.3/5"},
                {"10", "Laneige Lip Sleeping Mask", "$22.00", "Laneige", "Lip Treatment", "Shea Butter, Vitamin C, Berry Extracts", "0.7 oz", "All, Dry", "Jar", "4.8/5"},
                {"11", "Garnier SkinActive Micellar Water", "$9.99", "Garnier", "Micellar Water", "Micelles, Glycerin", "13.5 oz", "All, Dry, Combination", "Pump", "4.2/5"},
                {"12", "Paula's Choice C-15 Super Booster", "$68.00", "Paula's Choice", "Serum", "Vitamin C, Ferulic Acid", "1 oz", "All, Dull, Uneven", "Dropper", "4.2/5"},
                {"13", "Rhode Barrier Repair Cream", "$29.00", "Rhode", "Moisturizer", "Shea Butter, Niacinamide", "1.7 oz", "All, Dry, Sensitive", "Jar", "4.4/5"},
                {"14", "Cetaphil Gentle Skin Cleanser", "$11.99", "Cetaphil", "Cleanser", "Coconut Oil, Glycerin", "16 oz", "All, Sensitive, Dry", "Pump", "4.2/5"},
                {"15", "The Inkey List Niacinamide", "$6.99", "The Ordinary", "Serum ", "Niacinamide", "1 oz", "All, Oily, Acne-prone", "Dropper", "4.5/5"},
                {"16", "The Ordinary AHA 30% + BHA 2% ", "$7.50", "The Ordinary", "Exfoliant", "AHAs, BHAs", "1 oz", "Oily, Congested", "Dropper", "4.6/5"},
                {"17", "Farmacy Deep Sweep 2% BHA Pore Cleaning Gel", "$34.00", "Farmacy", "Cleanser", "Salicylic Acid, Willow Bark Extract", "4 oz", "Oily, Combination", "Pump", "4.3/5"},
                {"18", "Kiehl's Midnight Recovery Serum", "$110.00", "Kiehl's", "Facial Oil", "Squalane, Lavender Oil", "1 oz", "All, Dry, Mature", "Dropper", "4.8/5"},
                {"19", "La Roche-Posay Anthelios SPF60 Clear Dry Sunscreen ", "$30.00", "La Roche-Posay", "Sunscreen", "Zinc Oxide, Mexoryl", "1.7 oz", "Oily, Acne-prone", "Pump", "4.5/5"}
            },
            new String [] {
                "S.No", "Products", "Price($)", "Brands", "Product Type", "Ingredients", "Size/Vol.", "Skin Type", "Packaging ", "Ratings"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productsJTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        productsJTable.setGridColor(new java.awt.Color(248, 241, 244));
        productsJTable.setMaximumSize(new java.awt.Dimension(2147483647, 560));
        productsJTable.setRowHeight(30);
        productsJTable.setSelectionBackground(new java.awt.Color(212, 204, 236));
        productsJTable.setSelectionForeground(new java.awt.Color(82, 46, 146));
        productsJTable.setShowGrid(false);
        productsJTable.getTableHeader().setReorderingAllowed(false);
        productsJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productsJTableMouseClicked(evt);
            }
        });
        ScrollPane.setViewportView(productsJTable);
        if (productsJTable.getColumnModel().getColumnCount() > 0) {
            productsJTable.getColumnModel().getColumn(0).setResizable(false);
            productsJTable.getColumnModel().getColumn(0).setPreferredWidth(45);
            productsJTable.getColumnModel().getColumn(1).setResizable(false);
            productsJTable.getColumnModel().getColumn(1).setPreferredWidth(247);
            productsJTable.getColumnModel().getColumn(2).setResizable(false);
            productsJTable.getColumnModel().getColumn(2).setPreferredWidth(74);
            productsJTable.getColumnModel().getColumn(3).setResizable(false);
            productsJTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            productsJTable.getColumnModel().getColumn(4).setResizable(false);
            productsJTable.getColumnModel().getColumn(4).setPreferredWidth(108);
            productsJTable.getColumnModel().getColumn(5).setResizable(false);
            productsJTable.getColumnModel().getColumn(5).setPreferredWidth(225);
            productsJTable.getColumnModel().getColumn(6).setResizable(false);
            productsJTable.getColumnModel().getColumn(6).setPreferredWidth(90);
            productsJTable.getColumnModel().getColumn(7).setResizable(false);
            productsJTable.getColumnModel().getColumn(7).setPreferredWidth(140);
            productsJTable.getColumnModel().getColumn(8).setResizable(false);
            productsJTable.getColumnModel().getColumn(8).setPreferredWidth(120);
            productsJTable.getColumnModel().getColumn(9).setResizable(false);
            productsJTable.getColumnModel().getColumn(9).setPreferredWidth(75);
        }
        productsJTable.getAccessibleContext().setAccessibleName("");
        productsJTable.getAccessibleContext().setAccessibleDescription("");

        titleJlabel.setFont(new java.awt.Font("AppleMyungjo", 1, 36)); // NOI18N
        titleJlabel.setForeground(new java.awt.Color(62, 35, 110));
        titleJlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleJlabel.setText("SERINITY SKINSSESNCE");
        titleJlabel.setIconTextGap(5);

        clearAllfiltersJbutton.setBackground(new java.awt.Color(239, 215, 229));
        clearAllfiltersJbutton.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        clearAllfiltersJbutton.setForeground(new java.awt.Color(62, 35, 110));
        clearAllfiltersJbutton.setText("Clear All Filters");
        clearAllfiltersJbutton.setPreferredSize(new java.awt.Dimension(115, 25));
        clearAllfiltersJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllfiltersJbuttonActionPerformed(evt);
            }
        });

        addJButton.setBackground(new java.awt.Color(239, 215, 229));
        addJButton.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        addJButton.setForeground(new java.awt.Color(62, 35, 110));
        addJButton.setText("Add");
        addJButton.setPreferredSize(new java.awt.Dimension(75, 25));
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        updateJButton.setBackground(new java.awt.Color(239, 215, 229));
        updateJButton.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        updateJButton.setForeground(new java.awt.Color(62, 35, 110));
        updateJButton.setText("Update");
        updateJButton.setPreferredSize(new java.awt.Dimension(75, 25));
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });

        sortJComboBox.setBackground(new java.awt.Color(239, 215, 229));
        sortJComboBox.setFont(new java.awt.Font("Heiti SC", 0, 13)); // NOI18N
        sortJComboBox.setForeground(new java.awt.Color(62, 35, 110));
        sortJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort By", "Price Low to High", "Price High to Low" }));
        sortJComboBox.setPreferredSize(new java.awt.Dimension(115, 25));
        sortJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortJComboBoxActionPerformed(evt);
            }
        });

        skinTypeJComboBox.setBackground(new java.awt.Color(239, 215, 229));
        skinTypeJComboBox.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        skinTypeJComboBox.setForeground(new java.awt.Color(62, 35, 110));
        skinTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Skin Types", "All", "Sensitive", "Dry", "Oily", "Combination", "Dull", "Uneven", "Acne-prone", "Congested", "Mature" }));
        skinTypeJComboBox.setPreferredSize(new java.awt.Dimension(115, 25));
        skinTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skinTypeJComboBoxActionPerformed(evt);
            }
        });

        productTypeJComboBox.setBackground(new java.awt.Color(239, 215, 229));
        productTypeJComboBox.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        productTypeJComboBox.setForeground(new java.awt.Color(62, 35, 110));
        productTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Product Types", "Sunscreen", "Moisturizer", "Lip Glaze", "Cleanser", "Facial Oil", "Serum", "Exfoliant", "Toner", "Lip Treatment", "Micellar Water" }));
        productTypeJComboBox.setPreferredSize(new java.awt.Dimension(123, 25));
        productTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productTypeJComboBoxActionPerformed(evt);
            }
        });

        brandsJComboBox.setBackground(new java.awt.Color(239, 215, 229));
        brandsJComboBox.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        brandsJComboBox.setForeground(new java.awt.Color(62, 35, 110));
        brandsJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brands", "EltaMD", "La Roche-Posay", "Rhode", "Cetaphil", "Vanicream", "Biossance", "The Ordinary", "Paula's Choice", "Farmacy", "Laneige", "Garnier", "Kiehl's" }));
        brandsJComboBox.setPreferredSize(new java.awt.Dimension(123, 25));
        brandsJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandsJComboBoxActionPerformed(evt);
            }
        });

        deleteJButton.setBackground(new java.awt.Color(239, 215, 229));
        deleteJButton.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        deleteJButton.setForeground(new java.awt.Color(62, 35, 110));
        deleteJButton.setText("Delete");
        deleteJButton.setPreferredSize(new java.awt.Dimension(75, 25));
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        searchJLabel.setFont(new java.awt.Font("Heiti TC", 1, 15)); // NOI18N
        searchJLabel.setForeground(new java.awt.Color(62, 35, 110));
        searchJLabel.setText("Search :");

        numJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        numJLabel.setForeground(new java.awt.Color(62, 35, 110));
        numJLabel.setText("S.No");

        productsJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        productsJLabel.setForeground(new java.awt.Color(62, 35, 110));
        productsJLabel.setText("Products");

        priceJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        priceJLabel.setForeground(new java.awt.Color(62, 35, 110));
        priceJLabel.setText("Price($)");

        brandsJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        brandsJLabel.setForeground(new java.awt.Color(62, 35, 110));
        brandsJLabel.setText("Brands");

        productTypeJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        productTypeJLabel.setForeground(new java.awt.Color(62, 35, 110));
        productTypeJLabel.setText("Product Type");

        ingredientsJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        ingredientsJLabel.setForeground(new java.awt.Color(62, 35, 110));
        ingredientsJLabel.setText("Ingredients");

        sizeJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        sizeJLabel.setForeground(new java.awt.Color(62, 35, 110));
        sizeJLabel.setText("Size/Vol.");

        skintypeJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        skintypeJLabel.setForeground(new java.awt.Color(62, 35, 110));
        skintypeJLabel.setText("Skin Type");

        packagingJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        packagingJLabel.setForeground(new java.awt.Color(62, 35, 110));
        packagingJLabel.setText("Packaging ");

        ratingsJLabel.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        ratingsJLabel.setForeground(new java.awt.Color(62, 35, 110));
        ratingsJLabel.setText("Ratings");
        ratingsJLabel.setToolTipText("");

        numJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        numJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        productJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        productJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        priceJTextField.setFont(new java.awt.Font("Heiti TC", 1, 13)); // NOI18N
        priceJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        brandsJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        brandsJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        ingredientsJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        ingredientsJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        sizeJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        sizeJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        skintypeJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        skintypeJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        ratingsJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        ratingsJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        packagingJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        packagingJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        productTypeJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        productTypeJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));

        searchJTextField.setFont(new java.awt.Font("Heiti TC", 0, 13)); // NOI18N
        searchJTextField.setActionCommand("<Not Set>");
        searchJTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchJTextField.setSelectionColor(new java.awt.Color(212, 204, 236));
        searchJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJTextFieldActionPerformed(evt);
            }
        });
        searchJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchJTextFieldKeyReleased(evt);
            }
        });

        clearAllJButton.setBackground(new java.awt.Color(239, 215, 229));
        clearAllJButton.setFont(new java.awt.Font("Heiti TC", 0, 14)); // NOI18N
        clearAllJButton.setForeground(new java.awt.Color(62, 35, 110));
        clearAllJButton.setText("Clear All");
        clearAllJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout serinityJPanelLayout = new javax.swing.GroupLayout(serinityJPanel);
        serinityJPanel.setLayout(serinityJPanelLayout);
        serinityJPanelLayout.setHorizontalGroup(
            serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serinityJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serinityJPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(serinityJPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(serinityJPanelLayout.createSequentialGroup()
                                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(ingredientsJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                                .addComponent(sizeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(skintypeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(34, 34, 34)
                                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sizeJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                            .addComponent(skintypeJTextField)
                                            .addComponent(ingredientsJTextField)))
                                    .addGroup(serinityJPanelLayout.createSequentialGroup()
                                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(productTypeJLabel)
                                            .addComponent(priceJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(productsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(numJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(21, 21, 21)
                                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(numJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                                .addComponent(productJTextField))
                                            .addComponent(productTypeJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)))
                                    .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(serinityJPanelLayout.createSequentialGroup()
                                            .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(ratingsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(packagingJLabel))
                                            .addGap(31, 31, 31)
                                            .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(packagingJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                                .addComponent(ratingsJTextField)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serinityJPanelLayout.createSequentialGroup()
                                            .addComponent(brandsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(34, 34, 34)
                                            .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(priceJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                                .addComponent(brandsJTextField))))))
                            .addGroup(serinityJPanelLayout.createSequentialGroup()
                                .addComponent(addJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearAllJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1089, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(serinityJPanelLayout.createSequentialGroup()
                                .addComponent(updateJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(deleteJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(serinityJPanelLayout.createSequentialGroup()
                        .addComponent(searchJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(searchJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(skinTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(brandsJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(productTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(sortJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(clearAllfiltersJbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(serinityJPanelLayout.createSequentialGroup()
                        .addComponent(titleJlabel)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        serinityJPanelLayout.setVerticalGroup(
            serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serinityJPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(titleJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(clearAllfiltersJbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sortJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(productTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(brandsJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(skinTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(serinityJPanelLayout.createSequentialGroup()
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productsJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(priceJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brandsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brandsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productTypeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productTypeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ingredientsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ingredientsJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sizeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sizeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(skintypeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(skintypeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(packagingJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(packagingJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ratingsJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ratingsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addGroup(serinityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearAllJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(serinityJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(serinityJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) productsJTable.getModel();

        if (productsJTable.getSelectedRowCount() == 1){
            //if single row is selected then delete
            tblModel.removeRow(productsJTable.getSelectedRow());
        }else{
            if(productsJTable.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Table is Empty.");

            }else{
                //if table is not empty but row is not selected or multiple row is selected
                JOptionPane.showMessageDialog(this, "Please select one row for deleting.");

            }
        }
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
   
        DefaultTableModel tblModel = (DefaultTableModel) productsJTable.getModel();
        if(productsJTable.getSelectedRowCount() == 1 ) {
            
            String num = numJTextField.getText();
            String products = productJTextField.getText();
            String price = priceJTextField.getText();
            String brands = brandsJTextField.getText();
            String producttype = productTypeJTextField.getText();
            String ingredients = ingredientsJTextField.getText();
            String size = sizeJTextField.getText();
            String skintype = skintypeJTextField.getText();
            String packagingtype = packagingJTextField.getText();
            String ratings = ratingsJTextField.getText();
        
            // /setting updated value on table row...
            
            tblModel.setValueAt(num, productsJTable.getSelectedRow(), 0);
            tblModel.setValueAt(products, productsJTable.getSelectedRow(), 1);
            tblModel.setValueAt(price, productsJTable.getSelectedRow(), 2);
            tblModel.setValueAt(brands, productsJTable.getSelectedRow(), 3);
            tblModel.setValueAt(producttype, productsJTable.getSelectedRow(), 4);
            tblModel.setValueAt(ingredients, productsJTable.getSelectedRow(), 5);
            tblModel.setValueAt(size, productsJTable.getSelectedRow(), 6);
            tblModel.setValueAt(skintype, productsJTable.getSelectedRow(), 7);
            tblModel.setValueAt(packagingtype, productsJTable.getSelectedRow(), 8);
            tblModel.setValueAt(ratings, productsJTable.getSelectedRow(), 9);
            
            //updating sessage display...
            
            JOptionPane.showMessageDialog(this, "Updated Successfully!");
        } else {
            if(productsJTable.getRowCount() == 0){
                
                //if table is empty
                
                JOptionPane.showMessageDialog(this, "Table is Empty!");
            }else {
                
                //if row not selected or multiple row selected
                JOptionPane.showMessageDialog(this, "Please select a row. ");
                
             
            }
        }
    }//GEN-LAST:event_updateJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        // TODO add your handling code here:
        if(numJTextField.getText().equals("")||productJTextField.getText().equals("")||priceJTextField.getText().equalsIgnoreCase("")||brandsJTextField.getText().equals("")||productTypeJTextField.getText().equals("")||ingredientsJTextField.getText().equals("")||sizeJTextField.getText().equals("")||skintypeJTextField.getText().equals("")||packagingJTextField.getText().equals("")||ratingsJTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter all fields!");
           
        }else {
            
            //stroing data into string array
            String data [] = {numJTextField.getText(),productJTextField.getText(),priceJTextField.getText(),brandsJTextField.getText(),productTypeJTextField.getText(),ingredientsJTextField.getText(),sizeJTextField.getText(),skintypeJTextField.getText(),packagingJTextField.getText(),ratingsJTextField.getText()};
            
            DefaultTableModel tblModel = (DefaultTableModel)productsJTable.getModel();
            //adding string array
            tblModel.addRow(data);//row added
            
            //message added 
                        
            JOptionPane.showMessageDialog(this, "Data Added Successfully");
            //clearing text field for new entry..
            numJTextField.setText("");
            productJTextField.setText("");
            priceJTextField.setText("");
            brandsJTextField.setText("");
            productTypeJTextField.setText("");
            ingredientsJTextField.setText("");
            sizeJTextField.setText("");
            skintypeJTextField.setText("");
            packagingJTextField.setText("");
            ratingsJTextField.setText("");
            
            Font font = new Font("Heiti TC", Font.BOLD, 13);
            addJButton.setFont(font);
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void searchJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchJTextFieldKeyReleased
     
            String searchText = searchJTextField.getText().toLowerCase();
            search(searchText);


            // Binary Search in the sorted list
            boolean found = binarySearch(searchText);

            // Update GUI based on the search result
            if (found) {
                
                // Item found, update GUI accordingly
                System.out.println("Item found: " + searchText);
                
            } else {
                
                // Item not found, handle as needed
                System.out.println("Item not found: " + searchText);
                
            }
        }

            // Binary Search algorithm
            private boolean binarySearch(String searchTerm) {
                DefaultTableModel tblModel = (DefaultTableModel) productsJTable.getModel();
                int rowCount = tblModel.getRowCount();

                int low = 0;
                int high = rowCount - 1;

                while (low <= high) {
                    int mid = low + (high - low) / 2;

                    // Adjusting the column index based on table structure
                    String columnValue = (String) tblModel.getValueAt(mid, 1).toString().toLowerCase();

                    int result = columnValue.compareTo(searchTerm);

                    if (result == 0) {
                        // Match found
                        return true;
                    } else if (result < 0) {
                        low = mid + 1;
                    } else {
                        high = mid - 1;
                    }
                }

                // Match not found
                return false;

    }//GEN-LAST:event_searchJTextFieldKeyReleased

    private void searchJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJTextFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchJTextFieldActionPerformed

    private void productsJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsJTableMouseClicked

        //set data into the text field
        DefaultTableModel tblModel = (DefaultTableModel)productsJTable.getModel();
        
        // set data to textfield when row is selected
        
        String tblNum = tblModel.getValueAt(productsJTable.getSelectedRow(), 0).toString();
        String tblProducts = tblModel.getValueAt(productsJTable.getSelectedRow(), 1).toString();
        String tblPrice = tblModel.getValueAt(productsJTable.getSelectedRow(), 2).toString();
        String tblBrand = tblModel.getValueAt(productsJTable.getSelectedRow(), 3).toString();
        String tblProductType = tblModel.getValueAt(productsJTable.getSelectedRow(), 4).toString();
        String tblIngredients = tblModel.getValueAt(productsJTable.getSelectedRow(), 5).toString();
        String tblSize = tblModel.getValueAt(productsJTable.getSelectedRow(), 6).toString();
        String tblSkinType = tblModel.getValueAt(productsJTable.getSelectedRow(), 7).toString();
        String tblPackagingType = tblModel.getValueAt(productsJTable.getSelectedRow(), 8).toString();
        String tblRatings = tblModel.getValueAt(productsJTable.getSelectedRow(), 9).toString();

        //set to txtfield
        
        numJTextField.setText(tblNum);
        productJTextField.setText(tblProducts);
        priceJTextField.setText(tblPrice);
        brandsJTextField.setText(tblBrand);
        productTypeJTextField.setText(tblProductType);
        ingredientsJTextField.setText(tblIngredients);
        sizeJTextField.setText(tblSize);
        skintypeJTextField.setText(tblSkinType);
        packagingJTextField.setText(tblPackagingType);
        ratingsJTextField.setText(tblRatings);
            
             
    }//GEN-LAST:event_productsJTableMouseClicked

    private void clearAllJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllJButtonActionPerformed

        numJTextField.setText("");
        productJTextField.setText("");
        priceJTextField.setText("");
        brandsJTextField.setText("");
        productTypeJTextField.setText("");
        ingredientsJTextField.setText("");
        sizeJTextField.setText("");
        skintypeJTextField.setText("");
        packagingJTextField.setText("");
        ratingsJTextField.setText("");
    }//GEN-LAST:event_clearAllJButtonActionPerformed

    private void clearAllfiltersJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllfiltersJbuttonActionPerformed

        // Clear all filters
        TableRowSorter<DefaultTableModel> sorter = (TableRowSorter<DefaultTableModel>) productsJTable.getRowSorter();
        sorter.setRowFilter(null);  // Reset RowFilter to show all rows
    
            // Refresh the table
        DefaultTableModel TblModel = (DefaultTableModel) productsJTable.getModel();
        TblModel.fireTableDataChanged();

        skinTypeJComboBox.setSelectedIndex(0);
        productTypeJComboBox.setSelectedIndex(0);
        brandsJComboBox.setSelectedIndex(0);

    }//GEN-LAST:event_clearAllfiltersJbuttonActionPerformed

    private void sortJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortJComboBoxActionPerformed

        //get the selected item from jcombobox
        String selectedsort = (String) sortJComboBox.getSelectedItem();

        //filtering table based on selected ratings
        filterTableBySort(selectedsort);

    }//GEN-LAST:event_sortJComboBoxActionPerformed

    private void skinTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skinTypeJComboBoxActionPerformed

        // Get the selected item from JComboBox
        String selectedSkinType = (String) skinTypeJComboBox.getSelectedItem();

        // Filtering the table based on the selected skin type
        filterTableBySkinType(selectedSkinType);
    }//GEN-LAST:event_skinTypeJComboBoxActionPerformed

    private void brandsJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandsJComboBoxActionPerformed

        // Get the selected item from JComboBox
        String selectedBrand = (String) brandsJComboBox.getSelectedItem();

        // Filtering the table based on the selected brand
        filterTableByBrand(selectedBrand);
    }//GEN-LAST:event_brandsJComboBoxActionPerformed

    private void productTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productTypeJComboBoxActionPerformed

        //get the selected item from jcombobox
        String selectedproductType = (String) productTypeJComboBox.getSelectedItem();

        //filtering table based on selected product type
        filterTableByProductType(selectedproductType);
    }//GEN-LAST:event_productTypeJComboBoxActionPerformed

    private void filterTableBySkinType(String selectedSkinType) {
        filterTable(7, selectedSkinType);
    }
    
    private void filterTableBySort(String selectedSort) {
        filterTable(2, selectedSort);
    }

    private void filterTableByBrand(String selectedBrand) {
        filterTable(3, selectedBrand); 
    }

    private void filterTableByProductType(String selectedProductType) {
        filterTable(4, selectedProductType); 
    }  
    
    
    private void filterTable(int columnIndex, String selectedValue) {
    // Creating a TableRowSorter to filter the table
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) productsJTable.getModel());
    productsJTable.setRowSorter(sorter);

    // Defining the filter
    RowFilter<DefaultTableModel, Object> filter = new RowFilter<DefaultTableModel, Object>() {
        @Override
        public boolean include(Entry<? extends DefaultTableModel, ? extends Object> entry) {
            // Adjust the column index based on the table structure
            String columnValue = (String) entry.getValue(columnIndex);

            // Return true if the column value matches the selected value
            return selectedValue.equals("All") || selectedValue.equals(columnValue);
        }
    };

    // Apply the filter
    sorter.setRowFilter(filter);
}
    
    
 /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SerinitySkinssesnce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SerinitySkinssesnce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SerinitySkinssesnce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SerinitySkinssesnce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SerinitySkinssesnce().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton addJButton;
    private javax.swing.JComboBox<String> brandsJComboBox;
    private javax.swing.JLabel brandsJLabel;
    private javax.swing.JTextField brandsJTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearAllJButton;
    private javax.swing.JButton clearAllfiltersJbutton;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JLabel ingredientsJLabel;
    private javax.swing.JTextField ingredientsJTextField;
    private javax.swing.JLabel numJLabel;
    private javax.swing.JTextField numJTextField;
    private javax.swing.JLabel packagingJLabel;
    private javax.swing.JTextField packagingJTextField;
    private javax.swing.JLabel priceJLabel;
    private javax.swing.JTextField priceJTextField;
    private javax.swing.JTextField productJTextField;
    private javax.swing.JComboBox<String> productTypeJComboBox;
    private javax.swing.JLabel productTypeJLabel;
    private javax.swing.JTextField productTypeJTextField;
    private javax.swing.JLabel productsJLabel;
    private javax.swing.JTable productsJTable;
    private javax.swing.JLabel ratingsJLabel;
    private javax.swing.JTextField ratingsJTextField;
    private javax.swing.JLabel searchJLabel;
    private javax.swing.JTextField searchJTextField;
    private keeptoo.KGradientPanel serinityJPanel;
    private javax.swing.JLabel sizeJLabel;
    private javax.swing.JTextField sizeJTextField;
    private javax.swing.JComboBox<String> skinTypeJComboBox;
    private javax.swing.JLabel skintypeJLabel;
    private javax.swing.JTextField skintypeJTextField;
    private javax.swing.JComboBox<String> sortJComboBox;
    private javax.swing.JLabel titleJlabel;
    private javax.swing.JButton updateJButton;
    // End of variables declaration//GEN-END:variables

}

